自定义sink
tier4.sources  =  r1
tier4.channels  =  c1

tier4.sources.r1.type  = syslogudp
tier4.sources.r1.bind  = 10.10.41.251
tier4.sources.r1.port  = 20181
tier4.sources.r1.max-line-length = 512000
tier4.sources.r1.eventSize = 512000

tier4.channels.c1.type = org.apache.flume.channel.kafka.KafkaChannel
tier4.channels.c1.kafka.bootstrap.servers = iienode1:9092,iienode2:9092,iienode3:9092
tier4.channels.c1.kafka.topic = da_trace
tier4.channels.c1.parseAsFlumeEvent = false
tier4.channels.c1.kafka.producer.max.request.size = 704857600

tier4.sources.r1.channels  =  c1


共用版sink

a1.sources = r1
a1.sinks = k1
a1.channels = c1

# Describe/configure the source
a1.sources.r1.type = netcat
a1.sources.r1.bind = 192.168.88.161
a1.sources.r1.port = 20181
a1.sources.r1.max-line-length = 102400

# Describe the sink
a1.sinks.k1.type = org.apache.flume.sink.kafka.KafkaSink
a1.sinks.k1.kafka.bootstrap.servers= 192.168.88.161:9092,192.168.88.162:9092,192.168.88.163:9092
a1.sinks.k1.kafka.topic=pcap
a1.sinks.k1.serializer.class=kafka.serializer.StringEncoder
a1.sinks.k1.kafka.producer.acks=1
a1.sinks.k1.custom.encoding=UTF-8

# Use a channel which buffers events in memory
a1.channels.c1.type = memory
a1.channels.c1.capacity = 1000
a1.channels.c1.transactionCapacity = 100

# Bind the source and sink to the channel
a1.sources.r1.channels = c1
a1.sinks.k1.channel = c1