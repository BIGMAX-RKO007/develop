优化 Dockerfile 的核心是 合理分层。
可以看到每层 layer 都使用 cache ( ---> Using cache) ，并未重新构建。
我们可以通过 docker image ls |grep demo 看到， demo:0.0.1 与 demo:0.0.2 的 layer hash 是相同。所以从根本上来说， 这两个镜像就是同一个镜像，虽然都是 build 出来的。
1. 以不变应万变：一动不如一静
一个相对固定的 build 环境
善用 cache
构建 自己的基础镜像：其中就包括了
安全补丁
权限限制
基础库依赖安装
等...
2. 精简为美：一屋不扫何以扫天下
使用 .dockerignore 保持 context 干净
容器镜像环境清理
缓存清理
multi stage build
你需要的了解的参考资料

docker storage driver: https://docs.docker.com/storage/storagedriver/
dockerfile best practices: https://docs.docker.com/develop/develop-images/dockerfile_best-practices/
multi-stage: https://docs.docker.com/develop/develop-images/multistage-build/
